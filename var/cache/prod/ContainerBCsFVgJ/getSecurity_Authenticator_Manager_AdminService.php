<?php

namespace ContainerBCsFVgJ;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/*
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getSecurity_Authenticator_Manager_AdminService extends App_KernelProdContainer
{
    /*
     * Gets the private 'security.authenticator.manager.admin' shared service.
     *
     * @return \Symfony\Component\Security\Http\Authentication\AuthenticatorManager
     */
    public static function do($container, $lazyLoad = true)
    {
        $a = ($container->privates['App\\Security\\AdminAuthenticator'] ?? $container->load('getAdminAuthenticatorService'));

        if (isset($container->privates['security.authenticator.manager.admin'])) {
            return $container->privates['security.authenticator.manager.admin'];
        }
        $b = ($container->privates['security.event_dispatcher.admin'] ?? self::getSecurity_EventDispatcher_AdminService($container));

        if (isset($container->privates['security.authenticator.manager.admin'])) {
            return $container->privates['security.authenticator.manager.admin'];
        }

        return $container->privates['security.authenticator.manager.admin'] = new \Symfony\Component\Security\Http\Authentication\AuthenticatorManager([$a], ($container->privates['security.token_storage'] ?? self::getSecurity_TokenStorageService($container)), $b, 'admin', ($container->privates['monolog.logger.security'] ?? self::getMonolog_Logger_SecurityService($container)), true, true, []);
    }
}
