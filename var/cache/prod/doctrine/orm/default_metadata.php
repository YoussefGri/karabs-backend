<?php

// This file has been auto-generated by the Symfony Cache Component.

return [[

'App__Entity__User__CLASSMETADATA__' => 0,
'App__Entity__Categorie__CLASSMETADATA__' => 1,
'App__Entity__Notation__CLASSMETADATA__' => 2,
'App__Entity__Horaire__CLASSMETADATA__' => 3,
'App__Entity__Enseigne__CLASSMETADATA__' => 4,

], [

0 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Mapping\\FieldMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\FieldMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone ($p['Doctrine\\ORM\\Mapping\\ManyToManyInverseSideMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToManyInverseSideMapping')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\User',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\UserRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => $o[1],
                        'email' => $o[2],
                        'roles' => $o[3],
                        'password' => $o[4],
                        'name' => $o[5],
                        'avatar' => $o[6],
                        'oauthId' => $o[7],
                        'oauthProvider' => $o[8],
                        'nom' => $o[9],
                        'prenom' => $o[10],
                        'ville' => $o[11],
                        'codePostal' => $o[12],
                        'resetToken' => $o[13],
                        'resetRequestedAt' => $o[14],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'email' => 'email',
                        'roles' => 'roles',
                        'password' => 'password',
                        'name' => 'name',
                        'avatar' => 'avatar',
                        'oauth_id' => 'oauthId',
                        'oauth_provider' => 'oauthProvider',
                        'nom' => 'nom',
                        'prenom' => 'prenom',
                        'ville' => 'ville',
                        'code_postal' => 'codePostal',
                        'reset_token' => 'resetToken',
                        'reset_requested_at' => 'resetRequestedAt',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'email' => 'email',
                        'roles' => 'roles',
                        'password' => 'password',
                        'name' => 'name',
                        'avatar' => 'avatar',
                        'oauthId' => 'oauth_id',
                        'oauthProvider' => 'oauth_provider',
                        'nom' => 'nom',
                        'prenom' => 'prenom',
                        'ville' => 'ville',
                        'codePostal' => 'code_postal',
                        'resetToken' => 'reset_token',
                        'resetRequestedAt' => 'reset_requested_at',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'user',
                        'quoted' => true,
                    ],
                ],
                'associationMappings' => [
                    [
                        'enseignesFavorites' => $o[15],
                    ],
                ],
                'idGenerator' => [
                    $o[16],
                ],
                'name' => [
                    'App\\Entity\\User',
                ],
                'id' => [
                    1 => true,
                ],
                'type' => [
                    1 => 'integer',
                    'string',
                    'json',
                    'string',
                    'string',
                    'string',
                    'string',
                    'string',
                    'string',
                    'string',
                    'string',
                    'string',
                    'string',
                    'datetime',
                ],
                'fieldName' => [
                    1 => 'id',
                    'email',
                    'roles',
                    'password',
                    'name',
                    'avatar',
                    'oauthId',
                    'oauthProvider',
                    'nom',
                    'prenom',
                    'ville',
                    'codePostal',
                    'resetToken',
                    'resetRequestedAt',
                ],
                'columnName' => [
                    1 => 'id',
                    'email',
                    'roles',
                    'password',
                    'name',
                    'avatar',
                    'oauth_id',
                    'oauth_provider',
                    'nom',
                    'prenom',
                    'ville',
                    'code_postal',
                    'reset_token',
                    'reset_requested_at',
                ],
                'length' => [
                    2 => 180,
                    4 => 255,
                    255,
                    255,
                    255,
                    50,
                    255,
                    255,
                    255,
                    5,
                ],
                'unique' => [
                    2 => true,
                ],
                'nullable' => [
                    4 => true,
                    true,
                    true,
                    true,
                    true,
                    true,
                    true,
                    true,
                    true,
                    true,
                    true,
                ],
                'fetch' => [
                    15 => 2,
                ],
                'sourceEntity' => [
                    15 => 'App\\Entity\\User',
                ],
                'mappedBy' => [
                    15 => 'favoris',
                ],
            ],
            'Doctrine\\ORM\\Mapping\\AssociationMapping' => [
                'fieldName' => [
                    15 => 'enseignesFavorites',
                ],
                'targetEntity' => [
                    15 => 'App\\Entity\\Enseigne',
                ],
            ],
        ],
        $o[0],
        []
    );
},
1 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Mapping\\FieldMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\FieldMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone ($p['Doctrine\\ORM\\Mapping\\ManyToManyInverseSideMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToManyInverseSideMapping')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Categorie',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => $o[1],
                        'nom' => $o[2],
                        'image' => $o[3],
                        'couleur' => $o[4],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'nom' => 'nom',
                        'image' => 'image',
                        'couleur' => 'couleur',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'nom' => 'nom',
                        'image' => 'image',
                        'couleur' => 'couleur',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'categorie',
                    ],
                ],
                'lifecycleCallbacks' => [
                    [
                        'preRemove' => [
                            'onPreRemove',
                        ],
                    ],
                ],
                'associationMappings' => [
                    [
                        'enseignes' => $o[5],
                    ],
                ],
                'idGenerator' => [
                    $o[6],
                ],
                'name' => [
                    'App\\Entity\\Categorie',
                ],
                'id' => [
                    1 => true,
                ],
                'type' => [
                    1 => 'integer',
                    'string',
                    'string',
                    'string',
                ],
                'fieldName' => [
                    1 => 'id',
                    'nom',
                    'image',
                    'couleur',
                ],
                'columnName' => [
                    1 => 'id',
                    'nom',
                    'image',
                    'couleur',
                ],
                'length' => [
                    2 => 255,
                    255,
                    50,
                ],
                'nullable' => [
                    3 => true,
                    true,
                ],
                'fetch' => [
                    5 => 2,
                ],
                'sourceEntity' => [
                    5 => 'App\\Entity\\Categorie',
                ],
                'mappedBy' => [
                    5 => 'categories',
                ],
            ],
            'Doctrine\\ORM\\Mapping\\AssociationMapping' => [
                'fieldName' => [
                    5 => 'enseignes',
                ],
                'targetEntity' => [
                    5 => 'App\\Entity\\Enseigne',
                ],
            ],
        ],
        $o[0],
        []
    );
},
2 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Mapping\\FieldMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\FieldMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone ($p['Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumnMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumnMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\JoinColumnMapping'],
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Notation',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => $o[1],
                        'notePrix' => $o[2],
                        'noteQualite' => $o[3],
                        'noteAmbiance' => $o[4],
                        'commentaire' => $o[5],
                        'dateCreation' => $o[6],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'note_prix' => 'notePrix',
                        'note_qualite' => 'noteQualite',
                        'note_ambiance' => 'noteAmbiance',
                        'commentaire' => 'commentaire',
                        'date_creation' => 'dateCreation',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'notePrix' => 'note_prix',
                        'noteQualite' => 'note_qualite',
                        'noteAmbiance' => 'note_ambiance',
                        'commentaire' => 'commentaire',
                        'dateCreation' => 'date_creation',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'notation',
                        'uniqueConstraints' => [
                            'unique_user_enseigne' => [
                                'columns' => [
                                    'user_id',
                                    'enseigne_id',
                                ],
                            ],
                        ],
                    ],
                ],
                'lifecycleCallbacks' => [
                    [
                        'prePersist' => [
                            'prePersist',
                        ],
                    ],
                ],
                'associationMappings' => [
                    [
                        'user' => $o[7],
                        'enseigne' => $o[9],
                    ],
                ],
                'idGenerator' => [
                    $o[11],
                ],
                'name' => [
                    'App\\Entity\\Notation',
                    8 => 'user_id',
                    10 => 'enseigne_id',
                ],
                'id' => [
                    1 => true,
                ],
                'type' => [
                    1 => 'integer',
                    'float',
                    'float',
                    'float',
                    'text',
                    'datetime',
                ],
                'fieldName' => [
                    1 => 'id',
                    'notePrix',
                    'noteQualite',
                    'noteAmbiance',
                    'commentaire',
                    'dateCreation',
                ],
                'columnName' => [
                    1 => 'id',
                    'note_prix',
                    'note_qualite',
                    'note_ambiance',
                    'commentaire',
                    'date_creation',
                ],
                'nullable' => [
                    2 => true,
                    true,
                    true,
                    true,
                    8 => false,
                    10 => false,
                ],
                'fetch' => [
                    7 => 2,
                    9 => 2,
                ],
                'sourceEntity' => [
                    7 => 'App\\Entity\\Notation',
                    9 => 'App\\Entity\\Notation',
                ],
                'inversedBy' => [
                    7 => 'notations',
                    9 => 'notations',
                ],
                'sourceToTargetKeyColumns' => [
                    7 => [
                        'user_id' => 'id',
                    ],
                    9 => [
                        'enseigne_id' => 'id',
                    ],
                ],
                'targetToSourceKeyColumns' => [
                    7 => [
                        'id' => 'user_id',
                    ],
                    9 => [
                        'id' => 'enseigne_id',
                    ],
                ],
                'joinColumns' => [
                    7 => [
                        $o[8],
                    ],
                    9 => [
                        $o[10],
                    ],
                ],
                'joinColumnFieldNames' => [
                    7 => [
                        'user_id' => 'user_id',
                    ],
                    9 => [
                        'enseigne_id' => 'enseigne_id',
                    ],
                ],
                'unique' => [
                    8 => false,
                    10 => false,
                ],
                'onDelete' => [
                    8 => 'CASCADE',
                ],
                'referencedColumnName' => [
                    8 => 'id',
                    10 => 'id',
                ],
            ],
            'Doctrine\\ORM\\Mapping\\AssociationMapping' => [
                'fieldName' => [
                    7 => 'user',
                    9 => 'enseigne',
                ],
                'targetEntity' => [
                    7 => 'App\\Entity\\User',
                    9 => 'App\\Entity\\Enseigne',
                ],
            ],
        ],
        $o[0],
        []
    );
},
3 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Mapping\\FieldMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\FieldMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone ($p['Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumnMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumnMapping')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Horaire',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => $o[1],
                        'jour' => $o[2],
                        'heureOuverture' => $o[3],
                        'heureFermeture' => $o[4],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'jour' => 'jour',
                        'heure_ouverture' => 'heureOuverture',
                        'heure_fermeture' => 'heureFermeture',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'jour' => 'jour',
                        'heureOuverture' => 'heure_ouverture',
                        'heureFermeture' => 'heure_fermeture',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'horaire',
                    ],
                ],
                'associationMappings' => [
                    [
                        'enseigne' => $o[5],
                    ],
                ],
                'idGenerator' => [
                    $o[7],
                ],
                'name' => [
                    'App\\Entity\\Horaire',
                    6 => 'enseigne_id',
                ],
                'id' => [
                    1 => true,
                ],
                'type' => [
                    1 => 'integer',
                    'string',
                    'time',
                    'time',
                ],
                'fieldName' => [
                    1 => 'id',
                    'jour',
                    'heureOuverture',
                    'heureFermeture',
                ],
                'columnName' => [
                    1 => 'id',
                    'jour',
                    'heure_ouverture',
                    'heure_fermeture',
                ],
                'enumType' => [
                    2 => 'App\\Enum\\JourEnum',
                ],
                'fetch' => [
                    5 => 2,
                ],
                'sourceEntity' => [
                    5 => 'App\\Entity\\Horaire',
                ],
                'inversedBy' => [
                    5 => 'horaires',
                ],
                'sourceToTargetKeyColumns' => [
                    5 => [
                        'enseigne_id' => 'id',
                    ],
                ],
                'targetToSourceKeyColumns' => [
                    5 => [
                        'id' => 'enseigne_id',
                    ],
                ],
                'joinColumns' => [
                    5 => [
                        $o[6],
                    ],
                ],
                'joinColumnFieldNames' => [
                    5 => [
                        'enseigne_id' => 'enseigne_id',
                    ],
                ],
                'unique' => [
                    6 => false,
                ],
                'nullable' => [
                    6 => false,
                ],
                'referencedColumnName' => [
                    6 => 'id',
                ],
            ],
            'Doctrine\\ORM\\Mapping\\AssociationMapping' => [
                'fieldName' => [
                    5 => 'enseigne',
                ],
                'targetEntity' => [
                    5 => 'App\\Entity\\Enseigne',
                ],
            ],
        ],
        $o[0],
        []
    );
},
4 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Mapping\\FieldMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\FieldMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone ($p['Doctrine\\ORM\\Mapping\\OneToManyAssociationMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToManyAssociationMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\OneToManyAssociationMapping'],
            clone ($p['Doctrine\\ORM\\Mapping\\ManyToManyOwningSideMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToManyOwningSideMapping')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinTableMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinTableMapping')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumnMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumnMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\JoinColumnMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\ManyToManyOwningSideMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\JoinTableMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\JoinColumnMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\JoinColumnMapping'],
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Enseigne',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => $o[1],
                        'nom' => $o[2],
                        'numeroTelephone' => $o[3],
                        'adresse' => $o[4],
                        'latitude' => $o[5],
                        'longitude' => $o[6],
                        'photo' => $o[7],
                        'description' => $o[8],
                        'pointsCle' => $o[9],
                        'website' => $o[10],
                        'notePrix' => $o[11],
                        'noteQualite' => $o[12],
                        'noteAmbiance' => $o[13],
                        'slogan' => $o[14],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'nom' => 'nom',
                        'numero_telephone' => 'numeroTelephone',
                        'adresse' => 'adresse',
                        'latitude' => 'latitude',
                        'longitude' => 'longitude',
                        'photo' => 'photo',
                        'description' => 'description',
                        'points_cle' => 'pointsCle',
                        'website' => 'website',
                        'note_prix' => 'notePrix',
                        'note_qualite' => 'noteQualite',
                        'note_ambiance' => 'noteAmbiance',
                        'slogan' => 'slogan',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'nom' => 'nom',
                        'numeroTelephone' => 'numero_telephone',
                        'adresse' => 'adresse',
                        'latitude' => 'latitude',
                        'longitude' => 'longitude',
                        'photo' => 'photo',
                        'description' => 'description',
                        'pointsCle' => 'points_cle',
                        'website' => 'website',
                        'notePrix' => 'note_prix',
                        'noteQualite' => 'note_qualite',
                        'noteAmbiance' => 'note_ambiance',
                        'slogan' => 'slogan',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'enseigne',
                    ],
                ],
                'lifecycleCallbacks' => [
                    [
                        'preRemove' => [
                            'onPreRemove',
                        ],
                    ],
                ],
                'associationMappings' => [
                    [
                        'horaires' => $o[15],
                        'notations' => $o[16],
                        'categories' => $o[17],
                        'favoris' => $o[21],
                    ],
                ],
                'idGenerator' => [
                    $o[25],
                ],
                'name' => [
                    'App\\Entity\\Enseigne',
                    18 => 'enseigne_categorie',
                    'enseigne_id',
                    'categorie_id',
                    22 => 'enseigne_user_favoris',
                    'enseigne_id',
                    'user_id',
                ],
                'id' => [
                    1 => true,
                ],
                'type' => [
                    1 => 'integer',
                    'string',
                    'string',
                    'string',
                    'float',
                    'float',
                    'string',
                    'text',
                    'json',
                    'string',
                    'float',
                    'float',
                    'float',
                    'string',
                ],
                'fieldName' => [
                    1 => 'id',
                    'nom',
                    'numeroTelephone',
                    'adresse',
                    'latitude',
                    'longitude',
                    'photo',
                    'description',
                    'pointsCle',
                    'website',
                    'notePrix',
                    'noteQualite',
                    'noteAmbiance',
                    'slogan',
                ],
                'columnName' => [
                    1 => 'id',
                    'nom',
                    'numero_telephone',
                    'adresse',
                    'latitude',
                    'longitude',
                    'photo',
                    'description',
                    'points_cle',
                    'website',
                    'note_prix',
                    'note_qualite',
                    'note_ambiance',
                    'slogan',
                ],
                'length' => [
                    2 => 255,
                    255,
                    255,
                    7 => 255,
                    10 => 255,
                    14 => 70,
                ],
                'nullable' => [
                    5 => true,
                    true,
                    true,
                    9 => true,
                    true,
                    true,
                    true,
                    true,
                    true,
                ],
                'cascade' => [
                    15 => [
                        'persist',
                        'remove',
                    ],
                    [
                        'persist',
                        'remove',
                    ],
                ],
                'fetch' => [
                    15 => 2,
                    2,
                    2,
                    21 => 2,
                ],
                'orphanRemoval' => [
                    15 => true,
                    true,
                ],
                'sourceEntity' => [
                    15 => 'App\\Entity\\Enseigne',
                    'App\\Entity\\Enseigne',
                    'App\\Entity\\Enseigne',
                    21 => 'App\\Entity\\Enseigne',
                ],
                'mappedBy' => [
                    15 => 'enseigne',
                    'enseigne',
                ],
                'isOnDeleteCascade' => [
                    17 => true,
                    21 => true,
                ],
                'inversedBy' => [
                    17 => 'enseignes',
                    21 => 'enseignesFavorites',
                ],
                'joinTable' => [
                    17 => $o[18],
                    21 => $o[22],
                ],
                'joinTableColumns' => [
                    17 => [
                        'enseigne_id',
                        'categorie_id',
                    ],
                    21 => [
                        'enseigne_id',
                        'user_id',
                    ],
                ],
                'relationToSourceKeyColumns' => [
                    17 => [
                        'enseigne_id' => 'id',
                    ],
                    21 => [
                        'enseigne_id' => 'id',
                    ],
                ],
                'relationToTargetKeyColumns' => [
                    17 => [
                        'categorie_id' => 'id',
                    ],
                    21 => [
                        'user_id' => 'id',
                    ],
                ],
                'joinColumns' => [
                    18 => [
                        $o[19],
                    ],
                    22 => [
                        $o[23],
                    ],
                ],
                'inverseJoinColumns' => [
                    18 => [
                        $o[20],
                    ],
                    22 => [
                        $o[24],
                    ],
                ],
                'onDelete' => [
                    19 => 'CASCADE',
                    'CASCADE',
                    23 => 'CASCADE',
                    'CASCADE',
                ],
                'referencedColumnName' => [
                    19 => 'id',
                    'id',
                    23 => 'id',
                    'id',
                ],
            ],
            'Doctrine\\ORM\\Mapping\\AssociationMapping' => [
                'fieldName' => [
                    15 => 'horaires',
                    'notations',
                    'categories',
                    21 => 'favoris',
                ],
                'targetEntity' => [
                    15 => 'App\\Entity\\Horaire',
                    'App\\Entity\\Notation',
                    'App\\Entity\\Categorie',
                    21 => 'App\\Entity\\User',
                ],
            ],
        ],
        $o[0],
        []
    );
},

]];
