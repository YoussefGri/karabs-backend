security:
    enable_authenticator_manager: true
    
    password_hashers:
        App\Entity\User:
            algorithm: auto

    providers:
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
            
        login:
            pattern: ^/api/login
            stateless: true
            json_login:
                check_path: api_login_check
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure

        api:
            pattern: ^/api
            stateless: true
            jwt: ~

        # admin:
        #     pattern: ^/admin
        #     lazy: true
        #     provider: app_user_provider
        #     # Utilisez un authenticator personnalis√© pour l'admin
        #     custom_authenticator: App\Security\AdminAuthenticator
        #     logout:
        #         # path: app_logout
        #         # target: admin_login
        #         path: admin_logout
        #         target: /login
        admin:
            pattern: ^/admin
            provider: app_user_provider
            form_login:
                login_path: admin_login
                check_path: admin_login
                enable_csrf: true
            logout:
                path: admin_logout
                target: /login

        main:
            lazy: true
            provider: app_user_provider
            custom_authenticators:
                - App\Security\OAuthAuthenticator
            logout:
                path: app_logout


    access_control:
    - { path: ^/admin/login, roles: PUBLIC_ACCESS }
    - { path: ^/admin/logout, roles: PUBLIC_ACCESS }
    - { path: ^/admin, roles: ROLE_ADMIN }
    - { path: ^/api/login_check, roles: PUBLIC_ACCESS }
    - { path: ^/api/register, roles: PUBLIC_ACCESS }
    - { path: ^/api/reset-password, roles: PUBLIC_ACCESS }  
    - { path: ^/api/public, roles: PUBLIC_ACCESS }
    - { path: ^/connect, roles: PUBLIC_ACCESS }
    - { path: ^/login, roles: PUBLIC_ACCESS }
    - { path: ^/api, roles: IS_AUTHENTICATED_FULLY }          
    - { path: ^/, roles: PUBLIC_ACCESS }
